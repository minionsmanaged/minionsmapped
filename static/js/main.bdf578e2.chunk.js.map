{"version":3,"sources":["PoolSummary.js","DomainSummary.js","App.js","serviceWorker.js","index.js"],"names":["Date","prototype","addHours","hours","this","setHours","getHours","PoolSummary","props","pc","pool","workerPoolId","split","state","instances","pending","domain","length","queryTaskcluster","intervalMs","Math","floor","random","interval","setInterval","bind","clearInterval","fetch","then","response","json","container","concat","workers","setState","config","maxCapacity","continuationToken","pendingTasks","providerId","icon","faAws","faWindows","faTrashAlt","endsWith","faGoogle","faHome","ListGroupItem","renderProviderIcon","className","filter","i","firstClaim","ProgressBar","striped","variant","now","min","max","key","Component","DomainSummary","platforms","pools","map","wp","v","a","indexOf","providers","platform","level","includes","provider","Card","style","marginTop","Header","ListGroup","renderPoolSummaryComponent","App","location","hash","replace","reduce","o","p","domains","o1","v1","o2","v2","handleFilterChange","workerPools","platformFilter","providerFilter","levelFilter","Object","assign","startsWith","allDomainPlatformsShouldBeFiltered","every","dp","allDomainProvidersShouldBeFiltered","allDomainLevelsShouldBeFiltered","domainLevel","dl","window","hostname","Row","JSON","stringify","event","id","target","filterType","history","push","keys","fk","values","ft","k","join","forEach","Container","renderDebugData","Form","Check","inline","type","onChange","checked","label","renderDomainSummaryComponent","withRouter","Boolean","match","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bdf578e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAws, faGoogle, faWindows } from \"@fortawesome/free-brands-svg-icons\";\n\nDate.prototype.addHours = function(hours){\n  this.setHours(this.getHours() + hours);\n  return this;\n}\nconst minIntervalMs = 10000;\nconst maxIntervalMs = 60000;\n\nclass PoolSummary extends Component {\n\n  interval;\n\n  constructor(props) {\n    super(props);\n    let pc = this.props.pool.workerPoolId.split('/');\n    this.state = {\n      instances: [],\n      pending: 0,\n      domain: (pc.length > 0) ? pc[0] : '',\n      pool: (pc.length > 1) ? pc[1] : ''\n    };\n  }\n  \n  componentDidMount() {\n    this.queryTaskcluster();\n    // refresh data in this component at a random interval, in\n    // order to prevent all components updating simultaneously\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let intervalMs = Math.floor(Math.random() * (maxIntervalMs - minIntervalMs)) + minIntervalMs;\n    this.interval = setInterval(this.queryTaskcluster.bind(this), intervalMs);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  \n  queryTaskcluster() {\n    let instances = [];\n    fetch('https://firefox-ci-tc.services.mozilla.com/api/queue/v1/provisioners/' + this.state.domain + '/worker-types/' + this.state.pool + '/workers')\n      .then(response => response.json())\n      .then(container => {\n        instances = instances.concat(container.workers);\n        this.setState({ instances });\n        if (('continuationToken' in container) && instances.length < this.props.pool.config.maxCapacity) {\n          fetch('https://firefox-ci-tc.services.mozilla.com/api/queue/v1/provisioners/' + this.state.domain + '/worker-types/' + this.state.pool + '/workers?continuationToken=' + container.continuationToken)\n            .then(response => response.json())\n            .then(container => {\n              instances = instances.concat(container.workers);\n              if ('continuationToken' in container) {\n                fetch('https://firefox-ci-tc.services.mozilla.com/api/queue/v1/provisioners/' + this.state.domain + '/worker-types/' + this.state.pool + '/workers?continuationToken=' + container.continuationToken)\n                  .then(response => response.json())\n                  .then(container => {\n                    instances = instances.concat(container.workers);\n                    this.setState({ instances });\n                    if (('continuationToken' in container) && instances.length < this.props.pool.config.maxCapacity) {\n                      fetch('https://firefox-ci-tc.services.mozilla.com/api/queue/v1/provisioners/' + this.state.domain + '/worker-types/' + this.state.pool + '/workers?continuationToken=' + container.continuationToken)\n                        .then(response => response.json())\n                        .then(container => {\n                          instances = instances.concat(container.workers);\n                          this.setState({ instances });\n                        });\n                    }\n                  });\n              } else {\n                this.setState({ instances });\n              }\n            });\n        }\n      });\n    fetch('https://firefox-ci-tc.services.mozilla.com/api/queue/v1/pending/' + this.state.domain + '/' + this.state.pool)\n      .then(response => response.json())\n      .then(container => {\n        let pending = container.pendingTasks;\n        this.setState({ pending });\n      });\n  }\n\n  renderProviderIcon() {\n    switch(this.props.pool.providerId) {\n      case 'aws':\n        return <FontAwesomeIcon icon={faAws} />;\n      case 'azure':\n        return <FontAwesomeIcon icon={faWindows} />;\n      case 'null-provider':\n        return <FontAwesomeIcon icon={faTrashAlt} />;\n      default:\n        return this.props.pool.providerId.endsWith('-gcp')\n          ? <FontAwesomeIcon icon={faGoogle} />\n          : <FontAwesomeIcon icon={faHome} />;\n    }\n  }\n\n  render() {\n    return (\n      <ListGroupItem>\n        <strong>\n          {this.state.domain} / {this.state.pool} {this.renderProviderIcon()}\n        </strong>\n        <small className=\"text-muted font-weight-light float-right\">\n          &nbsp;max: {this.props.pool.config.maxCapacity},\n          &nbsp;working: {this.state.instances.filter(i => (('latestTask' in i) && ('firstClaim' in i))).length},\n          &nbsp;initialising: {this.state.instances.filter(i => ((!('latestTask' in i) || !('firstClaim' in i)) && ((new Date(i.firstClaim)) > (new Date().addHours(-1))))).length},\n          &nbsp;pending: {this.state.pending}\n        </small>\n        <br />\n        <ProgressBar>\n          <ProgressBar striped variant=\"success\" now={Math.min(this.props.pool.config.maxCapacity, this.state.instances.filter(i => (('latestTask' in i) && ('firstClaim' in i))).length)} max={this.props.pool.config.maxCapacity} key={1} />\n          <ProgressBar striped now={Math.min(this.props.pool.config.maxCapacity, this.state.instances.filter(i => ((!('latestTask' in i) || !('firstClaim' in i)) && ((new Date(i.firstClaim)) > (new Date().addHours(-1))))).length)} max={this.props.pool.config.maxCapacity} key={2} />\n        </ProgressBar>\n      </ListGroupItem>\n    );\n  }\n}\n\nexport default PoolSummary;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport PoolSummary from './PoolSummary';\n\n\nclass DomainSummary extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      platforms: this.props.pools.map(wp => (wp.providerId.endsWith('-gcp')) ? 'google' : (wp.providerId === 'null-provider') ? 'deleted' : wp.providerId).filter((v, i, a) => a.indexOf(v) === i),\n      providers: this.props.pools.map(wp => wp.providerId).filter((v, i, a) => a.indexOf(v) === i)\n    };\n  }\n\n  renderPoolSummaryComponent(pool, filter) {\n    let platform;\n    if (pool.providerId in filter.platform) {\n      platform = pool.providerId;\n    } else if (pool.providerId.endsWith('-gcp')) {\n      platform = 'google';\n    }\n    let level;\n    if (pool.providerId.includes('-level1-') || (pool.workerPoolId.split('/')[0].endsWith('-1'))) {\n      level = 'one';\n    } else if (pool.providerId.includes('-level3-') || (pool.workerPoolId.split('/')[0].endsWith('-3'))) {\n      level = 'three';\n    } else if (pool.providerId.includes('-test-') || (pool.workerPoolId.split('/')[0].endsWith('-t'))) {\n      level = 'test';\n    } else {\n      level = 'none';\n    }\n    return ((!filter.platform[platform]) && (!filter.provider[pool.providerId]) && (!filter.level[level]))\n      ? <PoolSummary pool={pool} key={pool.workerPoolId} />\n      : '';\n  }\n\n  render() {\n    return (\n      <Card style={{marginTop: '10px'}}>\n        <Card.Header>\n            <strong>\n              {this.props.domain}\n            </strong>\n            <small className=\"text-muted font-weight-light float-right\">\n              {this.props.pools.length} pool{(this.props.pools.length === 1) ? '' : 's'},\n              &nbsp;{this.state.platforms.length} platform{(this.state.platforms.length === 1) ? '' : 's'},\n              &nbsp;{this.state.providers.length} provider{(this.state.providers.length === 1) ? '' : 's'}\n            </small>\n        </Card.Header>\n        <ListGroup className=\"list-group-flush\">\n          {this.props.pools.map((pool) => (\n            this.renderPoolSummaryComponent(pool, this.props.filter)\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n}\n\nexport default DomainSummary;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport DomainSummary from './DomainSummary';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    if (props.location && props.location.hash) {\n      let filter = props.location.hash\n        .replace(/#/, '')\n        .split(';')\n        .reduce((o, v) => {\n          let p = v.split('=')\n          o[p[0]] = p[1].split(',');\n          return o;\n        }, {});\n    }\n    this.state = {\n      domains: [],\n      pools: {},\n      filter: (props.location && props.location.hash)\n        ? {\n            ...{\n              platform: {},\n              provider: {},\n              level: {}\n            },\n            ...props.location.hash\n            .replace(/#/, '')\n            .split(';')\n            .reduce((o1, v1) => {\n              let p = v1.split('=')\n              o1[p[0]] = p[1].split(',').reduce((o2, v2) => {\n                o2[((['1', '3', 't'].includes(v2)) ? v2.replace('t', 'test').replace('1', 'one').replace('3', 'three') : v2)] = false;\n                return o2;\n              }, {});\n              return o1;\n            }, {}),\n          }\n        : {\n            platform: {},\n            provider: {},\n            level: {}\n          }\n    };\n    this.queryTaskcluster = this.queryTaskcluster.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n  \n  componentDidMount() {\n    this.queryTaskcluster();\n  }\n  \n  queryTaskcluster() {\n    let workerPools = [];\n    fetch('https://firefox-ci-tc.services.mozilla.com/api/worker-manager/v1/worker-pools')\n      .then(response => response.json())\n      .then(container => {\n        workerPools = workerPools.concat(container.workerPools);\n        let domains = workerPools.map(wp => wp.workerPoolId.split('/')[0]).filter((v, i, a) => a.indexOf(v) === i);\n        \n        let platformFilter = workerPools.map(wp => (wp.providerId.endsWith('-gcp')) ? 'google' : (wp.providerId === 'null-provider') ? 'deleted' : wp.providerId).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => {\n          o[v] = (v in this.state.filter.platform)\n            ? this.state.filter.platform[v]\n            : ((this.props.location.hash.includes('platform=') && !(v in this.state.filter.platform))\n              ? true\n              : this.props.location.hash.includes('platform=')\n                ? true\n                : !(\n                    (this.props.location.hash.includes('provider=') && this.props.location.hash.includes('aws') && v === 'aws')\n                    || (this.props.location.hash.includes('provider=') && this.props.location.hash.includes('azure') && v === 'azure')\n                    || (this.props.location.hash.includes('level=') && this.props.location.hash.includes('test'))\n                  ));\n          return o;\n        }, {});\n        let providerFilter = workerPools.map(wp => wp.providerId).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => {\n          o[v] = (v in this.state.filter.provider)\n            ? this.state.filter.provider[v]\n            : ((this.props.location.hash.includes('provider=') && !(v in this.state.filter.provider))\n              ? true\n              : this.props.location.hash.includes('provider=')\n                ? true\n                : (\n                    (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('google') && v.endsWith('-gcp'))\n                    || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('deleted') && v === 'null-provider')\n                    || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('aws') && v === 'aws')\n                    || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('azure') && v === 'azure')\n                    || !(this.props.location.hash.includes('level=') && this.props.location.hash.includes('test') && !v.includes('-level'))\n                  ));\n          return o;\n        }, {});\n        let levelFilter = workerPools.map(wp => {\n          if (wp.providerId.includes('-level1-') || (wp.workerPoolId.split('/')[0].endsWith('-1'))) {\n            return 'one';\n          } else if (wp.providerId.includes('-level3-') || (wp.workerPoolId.split('/')[0].endsWith('-3'))) {\n            return 'three';\n          } else if (wp.providerId.includes('-test-') || (wp.workerPoolId.split('/')[0].endsWith('-t'))) {\n            return 'test';\n          }\n          return 'none';\n        }).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => { o[v] = (v in this.state.filter.level) ? this.state.filter.level[v] : ((this.props.location.hash.includes('level=') && !(v in this.state.filter.level)) ? true : this.props.location.hash.includes('level=')); return o; }, {});\n        let pools = Object.assign({}, ...domains.map(domain => ({[domain]: workerPools.filter(wp => wp.workerPoolId.startsWith(domain + '/'))})));\n        if ('continuationToken' in container) {\n          fetch('https://firefox-ci-tc.services.mozilla.com/api/worker-manager/v1/worker-pools?continuationToken=' + container.continuationToken)\n            .then(response => response.json())\n            .then(container => {\n              workerPools = workerPools.concat(container.workerPools);\n              domains = workerPools.map(wp => wp.workerPoolId.split('/')[0]).filter((v, i, a) => a.indexOf(v) === i);\n              platformFilter = workerPools.map(wp => (wp.providerId.endsWith('-gcp')) ? 'google' : (wp.providerId === 'null-provider') ? 'deleted' : wp.providerId).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => {\n                o[v] = (v in this.state.filter.platform)\n                  ? this.state.filter.platform[v]\n                  : ((this.props.location.hash.includes('platform=') && !(v in this.state.filter.platform))\n                    ? true\n                    : this.props.location.hash.includes('platform=')\n                      ? true\n                      : !(\n                          (this.props.location.hash.includes('provider=') && this.props.location.hash.includes('aws') && v === 'aws')\n                          || (this.props.location.hash.includes('provider=') && this.props.location.hash.includes('azure') && v === 'azure')\n                          || (this.props.location.hash.includes('level=') && this.props.location.hash.includes('test'))\n                        ));\n                return o;\n              }, {});\n              providerFilter = workerPools.map(wp => wp.providerId).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => {\n                o[v] = (v in this.state.filter.provider)\n                  ? this.state.filter.provider[v]\n                  : ((this.props.location.hash.includes('provider=') && !(v in this.state.filter.provider))\n                    ? true\n                    : this.props.location.hash.includes('provider=')\n                      ? true\n                      : (\n                          (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('google') && v.endsWith('-gcp'))\n                          || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('deleted') && v === 'null-provider')\n                          || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('aws') && v === 'aws')\n                          || (this.props.location.hash.includes('platform=') && !this.props.location.hash.includes('azure') && v === 'azure')\n                          || !(this.props.location.hash.includes('level=') && this.props.location.hash.includes('test') && !v.includes('-level'))\n                        ));\n                return o;\n              }, {});\n              levelFilter = workerPools.map(wp => {\n                if (wp.providerId.includes('-level1-') || (wp.workerPoolId.split('/')[0].endsWith('-1'))) {\n                  return 'one';\n                } else if (wp.providerId.includes('-level3-') || (wp.workerPoolId.split('/')[0].endsWith('-3'))) {\n                  return 'three';\n                } else if (wp.providerId.includes('-test-') || (wp.workerPoolId.split('/')[0].endsWith('-t'))) {\n                  return 'test';\n                }\n                return 'none';\n              }).filter((v, i, a) => a.indexOf(v) === i).reduce((o, v) => { o[v] = (v in this.state.filter.level) ? this.state.filter.level[v] : ((this.props.location.hash.includes('level=') && !(v in this.state.filter.level)) ? true : this.props.location.hash.includes('level=')); return o; }, {});\n              pools = Object.assign({}, ...domains.map(domain => ({[domain]: workerPools.filter(wp => wp.workerPoolId.startsWith(domain + '/'))})));\n              this.setState(state => {\n                state.domains = domains;\n                state.pools = pools;\n                state.filter.platform = platformFilter;\n                state.filter.provider = providerFilter;\n                state.filter.level = levelFilter;\n                return state;\n              });\n            });\n        } else {\n          this.setState(state => {\n            state.domains = domains;\n            state.pools = pools;\n            state.filter.platform = platformFilter;\n            state.filter.provider = providerFilter;\n            state.filter.level = levelFilter;\n            return state;\n          });\n        }\n      });\n  }\n\n  renderDomainSummaryComponent(domain, pools, filter) {\n    let domainPlatforms = pools.map(wp => (wp.providerId.endsWith('-gcp')) ? 'google' : (wp.providerId === 'null-provider') ? 'deleted' : wp.providerId).filter((v, i, a) => a.indexOf(v) === i);\n    let allDomainPlatformsShouldBeFiltered = domainPlatforms.every(dp => ((dp in filter.platform) && filter.platform[dp]));\n\n    let domainProviders = pools.map(wp => wp.providerId).filter((v, i, a) => a.indexOf(v) === i);\n    let allDomainProvidersShouldBeFiltered = domainProviders.every(dp => ((dp in filter.provider) && filter.provider[dp]));\n\n    let allDomainLevelsShouldBeFiltered = false;\n    if (domain.endsWith('-1') || domain.endsWith('-3') || domain.endsWith('-t')) {\n      let domainLevel = (domain.endsWith('-1')) ? 'one' : (domain.endsWith('-3')) ? 'three' : 'test';\n      allDomainLevelsShouldBeFiltered = ((domainLevel in filter.level) && filter.level[domainLevel]);\n    } else {\n      let domainLevels = pools.map(wp => (wp.providerId.includes('-level1-')) ? 'one' : (wp.providerId.includes('-level3-')) ? 'three' : (wp.providerId.includes('-test-')) ? 'test' : 'none').filter((v, i, a) => a.indexOf(v) === i);\n      allDomainLevelsShouldBeFiltered = domainLevels.every(dl => ((dl in filter.level) && filter.level[dl]));\n    }\n\n    return ((!allDomainPlatformsShouldBeFiltered) && (!allDomainProvidersShouldBeFiltered) && (!allDomainLevelsShouldBeFiltered))\n      ? <DomainSummary domain={domain} pools={pools} filter={filter} key={domain} />\n      : '';\n  }\n\n  renderDebugData() {\n    if (window.location.hostname === 'localhost') {\n      return (\n        <Row>\n          <pre>{JSON.stringify(window.location, null, 2) }</pre>\n          <pre>{JSON.stringify(this.props, null, 2) }</pre>\n          <pre>{JSON.stringify(this.state.filter, null, 2) }</pre>\n        </Row>\n      );\n\n    }\n    return '';\n  }\n\n  handleFilterChange(event) {\n    let id = event.target.id.split('_');\n    let filterType = id[1];\n    let filter = id[2];\n    switch (filterType) {\n      case 'platform':\n        switch (filter) {\n          case 'aws':\n          case 'azure':\n            this.setState(state => {\n              state.filter.provider[filter] = !state.filter.platform[filter];\n              state.filter.platform[filter] = !state.filter.platform[filter];\n              this.props.history.push('#' + Object.keys(state.filter).filter(fk => Object.values(state.filter[fk]).includes(false)).map(ft => ft + '=' + Object.keys(state.filter[ft]).filter(k => !state.filter[ft][k]).join()).join(';'));\n              return state;\n            });\n            break;\n          case 'google':\n            this.setState(state => {\n              Object.keys(state.filter.provider).filter(provider => provider.endsWith('-gcp')).forEach(provider => {\n                state.filter.provider[provider] = !state.filter.platform[filter];\n              });\n              state.filter.platform[filter] = !state.filter.platform[filter];\n              this.props.history.push('#' + Object.keys(state.filter).filter(fk => Object.values(state.filter[fk]).includes(false)).map(ft => ft + '=' + Object.keys(state.filter[ft]).filter(k => !state.filter[ft][k]).join()).join(';'));\n              return state;\n            });\n            break;\n          case 'deleted':\n            this.setState(state => {\n              state.filter.provider['null-provider'] = !state.filter.platform[filter];\n              state.filter.platform[filter] = !state.filter.platform[filter];\n              this.props.history.push('#' + Object.keys(state.filter).filter(fk => Object.values(state.filter[fk]).includes(false)).map(ft => ft + '=' + Object.keys(state.filter[ft]).filter(k => !state.filter[ft][k]).join()).join(';'));\n              return state;\n            });\n            break;\n          default:\n            this.setState(state => {\n              state.filter[filterType][filter] = !state.filter[filterType][filter];\n              this.props.history.push('#' + Object.keys(state.filter).filter(fk => Object.values(state.filter[fk]).includes(false)).map(ft => ft + '=' + Object.keys(state.filter[ft]).filter(k => !state.filter[ft][k]).join()).join(';'));\n              return state;\n            });\n            break;\n        }\n        break;\n      default:\n        this.setState(state => {\n          state.filter[filterType][filter] = !state.filter[filterType][filter];\n          this.props.history.push('#' + Object.keys(state.filter).filter(fk => Object.values(state.filter[fk]).includes(false)).map(ft => ft + '=' + Object.keys(state.filter[ft]).filter(k => !state.filter[ft][k]).join()).join(';'));\n          return state;\n        });\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.renderDebugData()}\n        {Object.keys(this.state.filter).map((filterType) => (\n          <Row>\n            {filterType}s:&nbsp;\n            <Form>\n              {Object.keys(this.state.filter[filterType]).map((filter) => (\n                <Form.Check inline type=\"checkbox\" onChange={this.handleFilterChange} checked={!this.state.filter[filterType][filter]} label={filter} id={'filter_' + filterType + '_' + filter} key={'filter_' + filterType + '_' + filter} />\n              ))}\n            </Form>\n          </Row>\n        ))}\n        {this.state.domains.map((domain) => (\n          this.renderDomainSummaryComponent(domain, this.state.pools[domain], this.state.filter)\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}